<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="HomeDefaultWidgets">
		<control type="group" id="9003">
			<include>VisibleFadeEffect</include>
			<control type="group">
				<visible>!IsEmpty(Container(9000).ListItem.Property(widget)) + ![Window.IsVisible(favourites) | Window.IsVisible(script-globalsearch-main.xml) | Window.IsVisible(main.xml) | Window.IsVisible(BigScreenList.xml)]</visible>
				<animation effect="fade" start="0" end="100" delay="200" time="300" easing="out" condition="[ControlGroup(9003).IsVisible + Skin.HasSetting(Enable.PersistentWidgets)] | [ControlGroup(9003).HasFocus + !Skin.HasSetting(Enable.PersistentWidgets)]">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="300" reversible="false" condition="[!ControlGroup(9003).HasFocus + !Skin.HasSetting(Enable.PersistentWidgets)] | [Control.HasFocus(9000) + !Skin.HasSetting(Enable.PersistentWidgets)]">Conditional</animation>
				<animation effect="fade" tween="cubic" time="600" delay="500" start="0" end="100" reversible="false">WindowOpen</animation>
				<animation effect="fade" tween="cubic" time="300" start="100" end="0" reversible="false">WindowClose</animation>
				<animation effect="fade" tween="cubic" time="600" delay="500" start="0" end="100" reversible="false">Visible</animation>
				<animation effect="fade" tween="cubic" time="300" start="100" end="0" reversible="false">Hidden</animation>
				<animation effect="slide" time="0" start="0,0" end="0,-70" condition="[system.getbool(lookandfeel.enablerssfeeds) | Skin.HasSetting(Disable.SubmenuSlide)] + !StringCompare(Skin.String(HomeLayout),2)">Conditional</animation>

				<include condition="!Skin.HasSetting(WidgetStyle) + Skin.HasSetting(HorizontalListNav)">skinshortcuts-template-widget-fixed</include>
				<include condition="!Skin.HasSetting(WidgetStyle) + !Skin.HasSetting(HorizontalListNav)">skinshortcuts-template-widget-wrapped</include>
				<include condition="Skin.HasSetting(WidgetStyle)">skinshortcuts-template-widget-defaultpanel</include>
				<control type="group">
					<animation effect="slide" time="0" start="0,0" end="0,195" condition="StringCompare(Skin.String(HomeLayout),2)">Conditional</animation>
					<animation effect="slide" time="0" tween="" easing="" start="0" end="160" condition="Skin.HasSetting(Enable.BasicWeatherView)">Conditional</animation>
					<include name="WeatherWidgetCommons">
						<param name="WeatherPositionLeft" value="0" />
						<param name="WeatherPositionTop" value="550" />
						<param name="WeatherPanelWidth" value="1920" />
						<param name="WeatherPanelHeight" value="335" />
						<param name="WeatherItemWidth" value="320" />
						<param name="WeatherOrientation" value="Horizontal" />
						<param name="WeatherOnUp" value="9000" />
						<param name="WeatherOnDown" value="9000" />
						<param name="WeatherOnLeft" value="8000" />
						<param name="WeatherOnRight" value="8000" />
					</include>
				</control>
			</control>
		</control>
	</include>
	<include name="HomeVerticalWidgets">
		<control type="group" id="9003">
			<visible>!IsEmpty(Container(9000).ListItem.Property(widgetPath)) | StringCompare(Container(9000).ListItem.Property(widget),weather)</visible>
			<control type="group">
				<top>234</top>
				<animation effect="fade" start="0" end="100" time="300" easing="out" condition="ControlGroup(9003).IsVisible + Skin.HasSetting(Enable.PersistentWidgets)">Conditional</animation>
				<animation effect="fade" start="0" end="100" time="200" easing="out" delay="400" condition="[ControlGroup(9003).HasFocus + !Skin.HasSetting(Enable.PersistentWidgets)] | Skin.HasSetting(Enable.PersistentWidgets)">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="0" condition="[Control.HasFocus(9000) + !Skin.HasSetting(Enable.PersistentWidgets)]">Conditional</animation>

				<include>skinshortcuts-template-widget-verticalpanel</include>

				<control type="group">
					<control type="group">
						<visible>StringCompare(Container(9000).ListItem.Property(widget),weather)</visible>
						<top>10</top>
						<left>573</left>
						<width>1216</width>
						<control type="image">
							<description>current weather icon</description>
							<top>60</top>
							<width>320</width>
							<height>320</height>
							<texture>$VAR[WeatherIconVar]$INFO[Window(weather).Property(Current.FanartCode),,.png]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
						</control>
						<control type="group">
							<top>0</top>
							<left>295</left>
							<control type="label">
								<description>current temp Value</description>
								<width>270</width>
								<height>345</height>
								<font>WeatherTemp</font>
								<align>right</align>
								<label>$INFO[Window(weather).Property(Current.Temperature)]</label>
								<textcolor>$VAR[ColorTextVar]</textcolor>
							</control>
							<control type="label">
								<description>current temp Value Units</description>
								<left>270</left>
								<top>3</top>
								<width>150</width>
								<height>290</height>
								<font>font16</font>
								<label>$INFO[System.TemperatureUnits]</label>
								<textcolor>$VAR[ColorTextVar]</textcolor>
							</control>
						</control>
						<control type="label">
							<description>current condition label</description>
							<top>260</top>
							<left>420</left>
							<width>1316</width>
							<height>60</height>
							<label>$INFO[Window(weather).Property(Current.Condition)], $LOCALIZE[402] $INFO[Window(weather).Property(Current.FeelsLike)]$INFO[System.TemperatureUnits]</label>
							<font>font30</font>
							<textoffsetx>15</textoffsetx>
							<textcolor>$VAR[ColorTextVar]</textcolor>
						</control>
					</control>
					<include name="WeatherWidgetCommons">
						<param name="WeatherPositionLeft" value="573" />
						<param name="WeatherPositionTop" value="390" />
						<param name="WeatherPanelWidth" value="1216" />
						<param name="WeatherPanelHeight" value="370" />
						<param name="WeatherItemWidth" value="304" />
						<param name="WeatherOrientation" value="Vertical" />
						<param name="WeatherOnUp" value="9000" />
						<param name="WeatherOnDown" value="9000" />
						<param name="WeatherOnLeft" value="9000" />
						<param name="WeatherOnRight" value="9000" />
					</include>
				</control>
			</control>
		</control>
	</include>
	<include name="NowPlayingVideoWidget">
		<!-- Video Info -->
		<control type="group">
			<visible>Player.HasVideo + !Skin.HasSetting(Enable.HomeTopbar) + !Skin.HasSetting(Disable.Videoinfo)</visible>
			<include>dialogeffect</include>
			<animation effect="slide" time="0" start="0,0" end="0,120" condition="StringCompare(Skin.String(HomeLayout),2) | Skin.HasSetting(Enable.HomeTopbar)">Conditional</animation>
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0,0" end="0,140" condition="Window.IsActive(extendedprogressdialog) | Window.IsActive(busydialog)">Conditional</animation>
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0,0" end="0,140" condition="!Skin.HasSetting(Disable.WeatherClockDate) + !Skin.HasSetting(Enable.WeatherInMenu) + !Skin.HasSetting(Enable.HomeTopbar)">Conditional</animation>
			<left>1090</left>
			<top>32</top>
			<control type="image">
				<description>background image</description>
				<left>0</left>
				<top>0</top>
				<width>800</width>
				<height>140</height>
				<texture border="12">dialog_context.png</texture>
				<colordiffuse>$VAR[ColorDialogVar]</colordiffuse>
			</control>
			<control type="image">
				<description>avatar</description>
				<left>30</left>
				<top>30</top>
				<width>80</width>
				<height>80</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture fallback="DefaultVideoCover.png">$VAR[HomeNowPlayingThumbVar]</texture>
				<visible>VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="image">
				<description>avatar</description>
				<left>30</left>
				<top>30</top>
				<width>80</width>
				<height>80</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture fallback="DefaultVideoCover.png">$VAR[HomeNowPlayingThumbVar]</texture>
				<visible>VideoPlayer.Content(musicvideos)</visible>
			</control>
			<control type="image">
				<description>avatar</description>
				<left>30</left>
				<top>30</top>
				<width>54</width>
				<height>80</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture fallback="DefaultVideoCover.png">$VAR[HomeNowPlayingThumbVar]</texture>
				<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)</visible>
			</control>
			<control type="image">
				<description>avatar</description>
				<left>30</left>
				<top>30</top>
				<width>142</width>
				<height>80</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture fallback="DefaultVideoCover.png">$VAR[HomeNowPlayingThumbVar]</texture>
				<visible>![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos)]</visible>
			</control>
			<include name="NowPlayingWidgetLabels" condition="VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos)">
				<param name="NowPlayingLeft" value="130" />
				<param name="NowPlayingWidth" value="640" />
				<param name="NowPlayingAlign" value="left" />
			</include>
			<include name="NowPlayingWidgetLabels" condition="VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)">
				<param name="NowPlayingLeft" value="105" />
				<param name="NowPlayingWidth" value="665" />
				<param name="NowPlayingAlign" value="left" />
			</include>
			<include name="NowPlayingWidgetLabels" condition="![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos)]">
				<param name="NowPlayingLeft" value="192" />
				<param name="NowPlayingWidth" value="603" />
				<param name="NowPlayingAlign" value="left" />
			</include>
		</control>
	</include>
	<include name="NowPlayingMusicWidget">
		<!-- Music Info -->
		<control type="group">
			<visible>Player.HasAudio + !Skin.HasSetting(Enable.HomeTopbar) + !Skin.HasSetting(Disable.Musicinfo)</visible>
			<include>dialogeffect</include>
			<animation effect="slide" time="0" start="0,0" end="0,120" condition="StringCompare(Skin.String(HomeLayout),2) | Skin.HasSetting(Enable.HomeTopbar)">Conditional</animation>
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0,0" end="0,140" condition="[Window.IsActive(extendedprogressdialog) | Window.IsActive(busydialog)]">Conditional</animation>
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0,0" end="0,140" condition="!Skin.HasSetting(Disable.WeatherClockDate) + !Skin.HasSetting(Enable.WeatherInMenu) + [!Skin.HasSetting(Enable.HomeTopbar) | StringCompare(Skin.String(HomeLayout),2)]">Conditional</animation>
			<left>490</left>
			<top>32</top>
			<control type="image">
				<description>background image</description>
				<left>0</left>
				<top>0</top>
				<width>1400</width>
				<height>440</height>
				<texture border="12">dialog_context.png</texture>
				<colordiffuse>$VAR[ColorDialogVar]</colordiffuse>
			</control>
			<control type="image">
				<description>avatar</description>
				<left>30</left>
				<top>30</top>
				<width>240</width>
				<height>240</height>
				<aspectratio>keep</aspectratio>
				<texture fallback="DefaultAlbumCover.png">$INFO[Player.Art(thumb)]</texture>
			</control>
			<include name="NowPlayingWidgetLabels">
				<param name="NowPlayingLeft" value="290" />
				<param name="NowPlayingWidth" value="1080" />
				<param name="NowPlayingAlign" value="left" />
			</include>
		</control>
	</include>
	<include name="WeatherHomeWidget">
		<control type="group">
			<include>dialogeffect</include>
			<visible>!Skin.HasSetting(Enable.HomeTopbar) | StringCompare(Skin.String(HomeLayout),2)</visible>
			<animation effect="slide" time="0" start="0,0" end="0,120" condition="StringCompare(Skin.String(HomeLayout),2)">Conditional</animation>
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0,0" end="0,140" condition="Window.IsActive(extendedprogressdialog)">Conditional</animation>
			<left>1090</left>
			<top>32</top>
			<control type="image">
				<description>background image</description>
				<left>0</left>
				<top>0</top>
				<width>800</width>
				<height>140</height>
				<texture border="12">dialog_context.png</texture>
				<colordiffuse>$VAR[ColorDialogVar]</colordiffuse>
			</control>
			<control type="image">
				<description>avatar</description>
				<left>30</left>
				<top>30</top>
				<width>80</width>
				<height>80</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<texture fallback="DefaultAddonNone.png">$VAR[WeatherIconVar]$INFO[Window(weather).Property(Current.FanartCode),,.png]</texture>
			</control>
			<control type="grouplist">
				<top>26</top>
				<left>130</left>
				<width>640</width>
				<height>45</height>
				<align>left</align>
				<orientation>Horizontal</orientation>
				<control type="label" id="1702">
					<width>auto</width>
					<height>45</height>
					<label>$INFO[System.Time]</label>
					<font>font28_title</font>
					<textcolor>$VAR[ColorTextVar]</textcolor>
				</control>
				<control type="label" id="1701">
					<width>auto</width>
					<height>45</height>
					<label>$INFO[Weather.Temperature, • ]</label>
					<font>font28_title</font>
					<textcolor>$VAR[ColorTextVar]</textcolor>
					<visible>Weather.IsFetched + !IsEmpty(Weather.Plugin) + !substring(Weather.Temperature,$LOCALIZE[503])</visible>
				</control>
			</control>
			<control type="label">
				<left>130</left>
				<top>68</top>
				<width>640</width>
				<height>45</height>
				<align>left</align>
				<label>$INFO[System.Date]</label>
				<font>topbar</font>
				<textcolor>$VAR[ColorHighlightVar]</textcolor>
			</control>
		</control>
	</include>
	<include name="RSSFeedWidget">
		<control type="group">
			<visible>!Control.HasFocus(9010) | !Skin.HasSetting(Disable.SubmenuSlide)</visible>
			<animation effect="slide" tween="cubic" end="0,90" time="240">WindowClose</animation>
			<animation effect="slide" tween="cubic" start="0,90" end="0,0" delay="300" time="240" condition="!Window.Previous(startup)">WindowOpen</animation>
			<animation effect="slide" tween="cubic" start="0,90" end="0,0" delay="800" time="480" condition="Window.Previous(startup)">WindowOpen</animation>
			<!--<animation effect="slide" start="1920" end="0" time="240">VisibleChange</animation>-->
			<top>980</top>
			<control type="group">
				<control type="label">
					<left>1880</left>
					<top>44</top>
					<width>60</width>
					<height>41</height>
					<label></label>
					<font>IconSmall</font>
					<textcolor>$VAR[ColorHighlightVar]</textcolor>
				</control>
				<control type="rss">
					<description>RSS feed</description>
					<left>15</left>
					<top>44</top>
					<height>30</height>
					<width>1855</width>
					<font>font13</font>
					<urlset>1</urlset>
					<textcolor>$VAR[ColorHighlightVar]</textcolor>
					<titlecolor>$VAR[ColorHighlightVar]</titlecolor>
					<headlinecolor>$VAR[ColorTextVar]</headlinecolor>
				</control>
			</control>
		</control>
	</include>
	<include name="NowPlayingWidgetLabels">
		<control type="fadelabel">
			<description>Line 1 Label</description>
			<left>$PARAM[NowPlayingLeft]</left>
			<top>27</top>
			<width>$PARAM[NowPlayingWidth]</width>
			<height>80</height>
			<font>topbar_title</font>
			<textcolor>$VAR[ColorTextVar]</textcolor>
			<align>$PARAM[NowPlayingAlign]</align>
			<aligny>center</aligny>
			<scrollout>false</scrollout>
			<pauseatend>2000</pauseatend>
			<label>$VAR[TopbarFadeLabel1]</label>
		</control>
		<control type="fadelabel">
			<description>Line 2 Label</description>
			<left>$PARAM[NowPlayingLeft]</left>
			<top>104</top>
			<width>$PARAM[NowPlayingWidth]</width>
			<height>80</height>
			<font>topbar_title</font>
			<textcolor>$VAR[ColorHighlightVar]</textcolor>
			<align>$PARAM[NowPlayingAlign]</align>
			<aligny>center</aligny>
			<scrollout>false</scrollout>
			<pauseatend>2000</pauseatend>
			<label>$INFO[MusicPlayer.Artist]</label>
		</control>
		<control type="fadelabel">
			<description>Line 3 Label</description>
			<left>$PARAM[NowPlayingLeft]</left>
			<top>181</top>
			<width>$PARAM[NowPlayingWidth]</width>
			<height>80</height>
			<font>topbar_title</font>
			<textcolor>$VAR[ColorTextVar]</textcolor>
			<align>$PARAM[NowPlayingAlign]</align>
			<aligny>center</aligny>
			<scrollout>false</scrollout>
			<pauseatend>2000</pauseatend>
			<label>$INFO[MusicPlayer.Album]</label>
		</control>
		<control type="progress">
            <left>$PARAM[NowPlayingLeft]</left>
            <top>290</top>
            <width>$PARAM[NowPlayingWidth]</width>
            <height>35</height>
            <info>Player.Progress</info>
            <colordiffuse>$VAR[ColorHighlightVar]</colordiffuse>
        </control>
		<control type="label">
            <description>Time Label</description>
            <left>$PARAM[NowPlayingLeft]</left>
            <top>330</top>
            <height>80</height>
            <width>$PARAM[NowPlayingWidth]</width>
            <label>$INFO[Player.Time]</label>
            <font>topbar_title</font>
        </control>
		<control type="label">
            <description>Time Label</description>
            <left>$PARAM[NowPlayingLeft]</left>
            <top>330</top>
            <height>80</height>
            <width>$PARAM[NowPlayingWidth]</width>
            <label>$INFO[Player.Duration]</label>
			<align>right</align>
            <font>topbar_title</font>
        </control>
	</include>
</includes>
