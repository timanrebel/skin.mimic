<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="View_53_ShowCase">
		<control type="group">
			<visible>Control.IsVisible(53)</visible>
			<top>-40</top>
			<left>0</left>
			<include>Animation.Common</include>
			<control type="group">
				<camera x="960" y="810" />
				<control type="group" id="6001">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnNext</visible>
					<animation effect="slide" end="-135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>15</left>
						<visible>Container.OnNext</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-7</include>
					</control>
					<control type="group">
						<left>150</left>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>285</left>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>420</left>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>555</left>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>690</left>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>1635</left>
						<visible>!Container.OnNext</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="2100" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1500</left>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1365</left>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1230</left>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>1095</left>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>960</left>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<visible>Container.OnNext</visible>
						<animation effect="slide" end="75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>825</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="1290" end="-55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>Container.OnNext</visible>
							<animation effect="rotatey" center="608" end="-55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCaseBG</include>
								<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG-1Var]</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay-1Var]</texture>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6002">
					<left>55</left>
					<top>570</top>
					<visible>Container.OnPrevious</visible>
					<animation effect="slide" end="135,0" time="200" reversible="false">Hidden</animation>
					<control type="group">
						<left>1500</left>
						<visible>Container.OnPrevious</visible>
						<animation effect="fade" start="100" end="0" time="200" reversible="false">Hidden</animation>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem7</include>
					</control>
					<control type="group">
						<left>1365</left>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1230</left>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1095</left>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>960</left>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>825</left>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>-120</left>
						<visible>!Container.OnPrevious</visible>
						<animation effect="fade" end="100" time="200" reversible="false">Visible</animation>
						<animation effect="rotatey" center="-270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>15</left>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>150</left>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>285</left>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>420</left>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>555</left>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<visible>Container.OnPrevious</visible>
						<animation effect="slide" end="-75,0" time="200" reversible="false">Hidden</animation>
						<control type="group">
							<left>690</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="540" end="55" time="200" reversible="false" tween="quadratic" easing="in">Hidden</animation>
							<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
							<include>MovieShowCaseItem0</include>
						</control>
						<control type="group">
							<left>758</left>
							<visible>Container.OnPrevious</visible>
							<animation effect="rotatey" center="1223" end="55" time="200" reversible="false" tween="quadratic">Hidden</animation>
							<control type="image">
								<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem1Var]</texture>
								<include>MovieShowcaseThumb</include>
							</control>
							<control type="image">
								<animation center="auto" easing="inout" effect="fade" condition="![Control.HasFocus(60) | ControlGroup(9050).HasFocus(0)]" delay="100" end="0" start="100" time="300" tween="sine">Conditional</animation>
								<left>-4</left>
								<top>-16</top>
								<width>304</width>
								<height>436</height>
								<align>center</align>
								<bordersize>20</bordersize>
								<texture>thumbs/diffuse.png</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCaseBG</include>
								<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG1Var]</texture>
							</control>
							<control type="image">
								<include>WatchedOverlayShowCase</include>
								<texture>$VAR[IconOverlay1Var]</texture>
							</control>
							<control type="image">
								<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem1Var]</texture>
								<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
								<include>MovieShowcaseThumbReflection</include>
							</control>
						</control>
					</control>
				</control>
				<control type="group" id="6000">
					<left>55</left>
					<top>570</top>
					<visible>!Control.IsVisible(6001) + !Control.IsVisible(6002)</visible>
					<control type="group">
						<left>15</left>
						<animation effect="rotatey" center="-135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-6</include>
					</control>
					<control type="group">
						<left>150</left>
						<animation effect="rotatey" center="0" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-5</include>
					</control>
					<control type="group">
						<left>285</left>
						<animation effect="rotatey" center="135" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-4</include>
					</control>
					<control type="group">
						<left>420</left>
						<animation effect="rotatey" center="270" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-3</include>
					</control>
					<control type="group">
						<left>555</left>
						<animation effect="rotatey" center="405" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-2</include>
					</control>
					<control type="group">
						<left>690</left>
						<animation effect="rotatey" center="540" start="-55" end="-55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem-1</include>
					</control>
					<control type="group">
						<left>1500</left>
						<animation effect="rotatey" center="1965" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem6</include>
					</control>
					<control type="group">
						<left>1365</left>
						<animation effect="rotatey" center="1830" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem5</include>
					</control>
					<control type="group">
						<left>1230</left>
						<animation effect="rotatey" center="1695" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem4</include>
					</control>
					<control type="group">
						<left>1095</left>
						<animation effect="rotatey" center="1560" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem3</include>
					</control>
					<control type="group">
						<left>960</left>
						<animation effect="rotatey" center="1425" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem2</include>
					</control>
					<control type="group">
						<left>825</left>
						<animation effect="rotatey" center="1290" start="55" end="55" time="0" condition="true">Conditional</animation>
						<include>MovieShowCaseItem1</include>
					</control>
					<control type="group">
						<left>758</left>
						<control type="group">
							<include>MovieShowCaseItem0</include>
						</control>
					</control>
				</control>
			</control>
			<control type="list" id="53">
				<left>-69</left>
				<top>540</top>
				<width>2058</width>
				<height>525</height>
				<onleft>53</onleft>
				<onright>53</onright>
				<onup>SetProperty(MediaMenu,True,home)</onup>
				<onup>SetFocus(9050)</onup>
				<ondown>60</ondown>
				<viewtype label="31077">bigwrap</viewtype>
				<pagecontrol>60</pagecontrol>
				<scrolltime tween="quadratic">300</scrolltime>
				<focusposition>3</focusposition>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<itemlayout height="525" width="260" />
				<focusedlayout height="525" width="260" />
			</control>
			<control type="group">
				<control type="grouplist">
					<left>300</left>
					<top>985</top>
					<width>1320</width>
					<height>45</height>
					<align>center</align>
					<itemgap>18</itemgap>
					<orientation>horizontal</orientation>
					<control type="label">
						<width>auto</width>
						<height>45</height>
						<aligny>center</aligny>
						<align>center</align>
						<font>font28_title</font>
						<textcolor>$VAR[ColorTextVar]</textcolor>
						<scroll>true</scroll>
						<label>$VAR[FloorLabelVar]</label>
						<textoffsetx>0</textoffsetx>
					</control>
				</control>
				<control type="group">
					<left>300</left>
					<top>1030</top>
					<control type="label">
						<left>0</left>
						<top>0</top>
						<width>1320</width>
						<height>30</height>
						<align>center</align>
						<font>font13_title</font>
						<textcolor>$VAR[ColorHighlightVar]</textcolor>
						<label>$VAR[FloorSubLabelVar]</label>
						<textoffsetx>30</textoffsetx>
					</control>
				</control>
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(53) + !Window.IsActive(addoninformation)</visible>
			<top>-15</top>
			<include>Scrollbar_Horizontal</include>
		</control>
	</include>
	<include name="ShowCaseInfoPanel">
		<visible>!Skin.HasSetting(Disable.ShowcaseInfopanel) + !Container.Content(sets) + !StringCompare(ListItem.Label,..)</visible>
		<include>Animation.Common</include>
		<control type="group" id="12000">
			<visible>Control.IsVisible(53)</visible>
			<top>30</top>
			<control type="group">
				<control type="grouplist">
					<visible>!substring(Container.FolderPath,plugin.video)</visible>
					<left>112</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel1Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="button">
						<label>$VAR[InfoPanelLabel2Var]</label>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
				</control>
				<control type="grouplist">
					<visible>!substring(Container.FolderPath,plugin.video)</visible>
					<left>610</left>
					<top>162</top>
					<control type="button">
						<label>$VAR[InfoPanelLabel3Var]</label>
						<width>552</width>
						<include>ShowCaseInfoPanelButtonsValues</include>
					</control>
					<control type="group">
						<control type="button">
							<label>$VAR[InfoPanelLabel4Var]</label>
							<width>276</width>
							<include>ShowCaseInfoPanelButtonsValues</include>
						</control>
					</control>
				</control>
				<control type="textbox">
					<visible>!substring(Container.FolderPath,plugin.video)</visible>
					<label>$VAR[VideoPlotVar]</label>
					<top>347</top>
					<left>127</left>
					<width>995</width>
					<height>160</height>
					<font>font14_textbox3</font>
					<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					<include>ShowCaseInfoPanelButtonsValues</include>
				</control>
				<control type="textbox">
					<visible>substring(Container.FolderPath,plugin.video)</visible>
					<label>$VAR[VideoPlotVar]</label>
					<top>167</top>
					<left>127</left>
					<width>995</width>
					<height>345</height>
					<font>font14_textbox</font>
					<autoscroll time="3000" delay="4000" repeat="5000">Skin.HasSetting(Enable.AutoScroll)</autoscroll>
					<include>ShowCaseInfoPanelButtonsValues</include>
				</control>
				<control type="multiimage">
					<left>1147</left>
					<top>150</top>
					<width>640</width>
					<height>360</height>
					<aspectratio>scale</aspectratio>
					<imagepath background="true">$VAR[ExtraFanartVar]</imagepath>
				</control>
			</control>
		</control>
	</include>
	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-16</top>
		<width>304</width>
		<height>436</height>
		<align>center</align>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowCaseDiffuse">
		<control type="image">
			<left>-4</left>
			<top>-16</top>
			<width>304</width>
			<height>436</height>
			<align>center</align>
			<bordersize>20</bordersize>
			<texture>thumbs/diffuse.png</texture>
		</control>
	</include>
	<include name="MovieShowcaseThumbReflection">
		<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
		<fadetime>0</fadetime>
		<left>16</left>
		<top>400</top>
		<width>264</width>
		<height>396</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
	</include>
	<include name="WatchedOverlayShowCase">
		<left>220</left>
		<top>4</top>
		<width>60</width>
		<height>60</height>
	</include>
	<include name="WatchedOverlayShowCaseBG">
		<left>218</left>
		<top>2</top>
		<width>64</width>
		<height>64</height>
		<aspectratio align="center" aligny="top">keep</aspectratio>
	</include>
	<include name="MovieShowCaseItem-7">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-7).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-7Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-7Var]</texture>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-6).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-6Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-6Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
				<width>121</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-5).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-5Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-5Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
				<width>131</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-4).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-4Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-4Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
				<width>145</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-3).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-3Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-3Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
				<width>160</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-2).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-2Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-2Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
				<width>179</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(-1).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem-1Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG-1Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay-1Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem-1Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
				<width>180</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(0).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem0Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<control type="image">
				<animation center="auto" easing="inout" effect="fade" condition="![Control.HasFocus(60) | ControlGroup(9050).HasFocus(0)]" delay="100" end="0" start="100" time="300" tween="sine">Conditional</animation>
				<left>-4</left>
				<top>-16</top>
				<width>304</width>
				<height>436</height>
				<align>center</align>
				<bordersize>20</bordersize>
				<texture>thumbs/diffuse.png</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG0Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay0Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem0Var]</texture>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem1">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(1).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem1Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG1Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay1Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem1Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
				<left>86</left>
				<width>192</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(2).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem2Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG2Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay2Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem2Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
				<left>102</left>
				<width>177</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(3).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem3Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG3Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay3Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem3Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
				<left>121</left>
				<width>158</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(4).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem4Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG4Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay4Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem4Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
				<left>136</left>
				<width>142</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(5).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem5Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG5Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay5Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem5Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
				<left>146</left>
				<width>133</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(6).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem6Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG6Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay6Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem6Var]</texture>
				<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
				<left>158</left>
				<width>122</width>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<control type="group">
			<visible>!IsEmpty(Container(53).ListItemNoWrap(7).FolderPath) | Skin.HasSetting(Enable.ShowcaseWrap)</visible>
			<control type="image">
				<texture background="true" fallback="DefaultFallback.png">$VAR[ShowcaseItem7Var]</texture>
				<include>MovieShowcaseThumb</include>
			</control>
			<include>MovieShowCaseDiffuse</include>
			<control type="image">
				<include>WatchedOverlayShowCaseBG</include>
				<texture colordiffuse="$VAR[ColorHighlightVar]">$VAR[IconOverlayBG7Var]</texture>
			</control>
			<control type="image">
				<include>WatchedOverlayShowCase</include>
				<texture>$VAR[IconOverlay7Var]</texture>
			</control>
			<control type="image">
				<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultFallback.png">$VAR[ShowcaseItem7Var]</texture>
				<include>MovieShowcaseThumbReflection</include>
			</control>
		</control>
	</include>
	<variable name="ShowcaseItem-7Var">
		<value condition="!IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value>$INFO[ListItem(-7).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value>$INFO[ListItem(-6).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value>$INFO[ListItem(-5).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value>$INFO[ListItem(-4).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value>$INFO[ListItem(-3).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value>$INFO[ListItem(-2).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="!IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value>$INFO[ListItem(-1).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value>$INFO[ListItem(1).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value>$INFO[ListItem(2).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value>$INFO[ListItem(3).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value>$INFO[ListItem(4).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value>$INFO[ListItem(5).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value>$INFO[ListItem(6).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value>$INFO[ListItem(7).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value>$INFO[ListItem(8).Thumb]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value>$INFO[ListItem(9).Thumb]</value>
	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(-1).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(-1).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(1).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(1).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(2).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(2).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(3).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(3).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay4Var">
		<value condition="ListItem(4).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(4).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(4).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay5Var">
		<value condition="ListItem(5).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(5).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(5).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay6Var">
		<value condition="ListItem(6).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(6).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(6).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay7Var">
		<value condition="ListItem(7).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(7).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(7).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay8Var">
		<value condition="ListItem(8).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(8).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(8).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlay9Var">
		<value condition="ListItem(9).IsResumable + Skin.HasSetting(Overlay.Resumable)">overlays/OverlayResumable.png</value>
		<value condition="StringCompare(ListItem(9).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)">overlays/OverlayWatched.png</value>
		<value condition="StringCompare(ListItem(9).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)">overlays/OverlayUnwatched.png</value>
	</variable>
	<variable name="IconOverlayBG-1Var">
		<value condition="[ListItem(-1).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(-1).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(-1).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG0Var">
		<value condition="[ListItem.IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem.Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG1Var">
		<value condition="[ListItem(1).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(1).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(1).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG2Var">
		<value condition="[ListItem(2).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(2).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(2).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG3Var">
		<value condition="[ListItem(3).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(3).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(3).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG4Var">
		<value condition="[ListItem(4).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(4).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(4).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG5Var">
		<value condition="[ListItem(5).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(5).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(5).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG6Var">
		<value condition="[ListItem(6).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(6).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(6).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG7Var">
		<value condition="[ListItem(7).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(7).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(7).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG8Var">
		<value condition="[ListItem(8).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(8).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(8).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
	<variable name="IconOverlayBG9Var">
		<value condition="[ListItem(9).IsResumable + Skin.HasSetting(Overlay.Resumable)] | [StringCompare(ListItem(9).Overlay,OverlayWatched.png) + Skin.HasSetting(Overlay.Watched)] | [StringCompare(ListItem(9).Overlay,OverlayUnwatched.png) + Skin.HasSetting(Overlay.Unwatched)]">overlays/overlaybg.png</value>
	</variable>
</includes>